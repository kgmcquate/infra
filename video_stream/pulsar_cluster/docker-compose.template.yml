version: '3'
networks:
  pulsar:
    driver: bridge
services:
  # Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    # volumes:
    #   - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms128m -Xmx128m -XX:MaxDirectMemorySize=128m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    networks:
      - pulsar
    environment:
      - PULSAR_MEM=-Xms128m -Xmx128m -XX:MaxDirectMemorySize=128m
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

  # Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=${cluster_name}
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      # otherwise every time we run docker compose uo or down we fail to start due to Cookie
      # See: https://github.com/apache/bookkeeper/blob/405e72acf42bb1104296447ea8840d805094c787/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java#L57-68
      - advertisedAddress=bookie
      - BOOKIE_MEM=-Xms128m -Xmx128m -XX:MaxDirectMemorySize=128m
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    # volumes:
    #   - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  # Start broker
  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - PULSAR_CONF_authenticationEnabled=true
      # - PULSAR_CONF_authorizationEnabled=true
      - PULSAR_CONF_authenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderToken
      - PULSAR_CONF_tokenSecretKey=file:///pulsar/key/secret.key
      - PULSAR_CONF_superUserRoles=[${superuser_name}]
      - PULSAR_CONF_metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_CONF_zookeeperServers=zookeeper:2181
      - PULSAR_CONF_clusterName=cluster-a
      - PULSAR_CONF_managedLedgerDefaultEnsembleSize=1
      - PULSAR_CONF_managedLedgerDefaultWriteQuorum=1
      - PULSAR_CONF_managedLedgerDefaultAckQuorum=1
      # - PULSAR_CONF_advertisedAddress=broker
      # - PULSAR_CONF_advertisedListeners=external:pulsar://${broker_domain}:${broker_pulsar_port}
      - PULSAR_MEM=-Xms128m -Xmx128m -XX:MaxDirectMemorySize=128m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:${broker_pulsar_port}"
      - "8080:${broker_api_port}"
    volumes:
      - /root/key/:/pulsar/key/
    command: bash -c "bin/apply-config-from-env-with-prefix.py PULSAR_CONF_ conf/broker.conf && exec bin/pulsar broker"
  