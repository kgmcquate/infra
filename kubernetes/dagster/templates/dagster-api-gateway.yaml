apiVersion: v1
kind: ConfigMap
metadata:
  name: dagster-api-gateway-config
  namespace: dagster
data:
  # Authorization configuration in YAML format
  users-config.yaml: |
    users:
    - email: "kgmcquate@gmail.com"
      username: "kgmcquate"
      groups:
        - "admin"
        - "data-engineers"

    - email: "kevin.mcquate@synapsehealth.com"
      username: "kevinmcquate"
      groups:
        - "viewers"

    - email: "johnathan.mavroudis@synapsehealth.com"
      username: "JohnMav"
      groups:
        - "viewers"

  groups-config.yaml: |
    groups:
    - name: "admin"
      description: "Full administrative access"
      permissions:
        mutations:
          - operation_name: "*"  # Allow all mutations
        queries:
          - operation_name: "*"  # Allow all queries

    - name: "data-engineers"
      description: "Data engineering team with limited mutation access"
      permissions:
        mutations:
          - operation_name: "launchPipelineExecution"
            parameter_restrictions:
              - jsonpath: "executionParams.selector.repositoryLocationName"
                allowed_values:
                  - "k8s-example-user-code-1"
                  - "k8s-example-user-code-2"
                  - "production-data-pipelines"
          - operation_name: "launchRun"
          - operation_name: "launchPipelineReexecution"
          - operation_name: "logTelemetry"
        queries:
          - operation_name: "*"  # Allow all queries

    - name: "viewers"
      description: "Read-only access"
      permissions:
        mutations:
          - operation_name: "IntrospectionQuery"
        queries:
          - operation_name: "*"  # Allow all queries

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dagster-api-gateway
  namespace: dagster
  labels:
    app: dagster-api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dagster-api-gateway
  template:
    metadata:
      labels:
        app: dagster-api-gateway
    spec:
      
      containers:
      - name: api-gateway
        image: kgmcquate/graphql-authz-proxy:latest
        ports:
        - containerPort: 5000
        command: ["/usr/bin/uv", "run", "gqlproxy"]
        args:
          - "--upstream-url"
          - "http://dagster-dagster-webserver:80"
          - "--users-config-file"
          - "/config/users-config.yaml"
          - "--groups-config-file"
          - "/config/groups-config.yaml"
          - "--host"
          - "0.0.0.0"
          - "--port"
          - "5000"
          - "--debug"
        volumeMounts:
        - name: config
          mountPath: /config
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: dagster-api-gateway-config

---

apiVersion: v1
kind: Service
metadata:
  name: dagster-api-gateway
  namespace: dagster
  labels:
    app: dagster-api-gateway
spec:
  selector:
    app: dagster-api-gateway
  ports:
  - name: http
    port: 5000
    targetPort: 5000
  type: ClusterIP