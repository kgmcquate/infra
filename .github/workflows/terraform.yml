name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "117819748843"
  TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_AWS_REGION: "us-east-1"
  TF_VAR_aws_account_id: "117819748843"
  TF_VAR_POSTGRES_PWD: ${{ secrets.POSTGRES_PWD }}
  TF_VAR_snowflake_account: "ircmtcn-ekb34223"
  TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
  TF_VAR_dbt_testgen_snowflake_password: ${{ secrets.DBT_TESTGEN_SNOWFLAKE_PASSWORD }}
  TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
  TF_VAR_databricks_account_id: ${{ vars.DATABRICKS_ACCOUNT_ID }}
  TF_VAR_databricks_account_client_id: ${{ vars.DATABRICKS_ACCOUNT_CLIENT_ID }}
  TF_VAR_databricks_account_client_secret: ${{ secrets.DATABRICKS_ACCOUNT_CLIENT_SECRET }}
  TF_VAR_confluent_cloud_api_key: ${{ secrets.CONFLUENT_CLOUD_API_KEY }}
  TF_VAR_confluent_cloud_api_secret: ${{ secrets.CONFLUENT_CLOUD_API_SECRET }}
  TF_VAR_vultr_api_key: ${{ secrets.VULTR_API_KEY }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Initialize
        run: >
          terraform init
          -backend-config="bucket=terraform-state-${AWS_ACCOUNT_ID}-${AWS_REGION}"
          -backend-config="key=infra"
          -backend-config="region=${AWS_REGION}"

      # Generates an execution plan for Terraform
#      - name: Terraform Plan
#        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
